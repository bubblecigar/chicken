{"version":3,"sources":["node_modules/isometricsass/src/sass/_isometric.sass"],"names":[],"mappings":"AAAA;EACI;;;AAEJ;EACI;;;AAEJ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACI","file":"app.c3f9f951.css","sourceRoot":"..","sourcesContent":["*, *::before, *::after\n    box-sizing: border-box\n\n.isometric-container\n    overflow: hidden\n\n.isometric\n    position: absolute\n    top: 50%\n    left: 50%\n    width: 0\n    height: 0\n    overflow: visible\n    transform-style: preserve-3d\n    transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg)\n    *\n        transform-style: preserve-3d\n\n=allSpace\n    position: absolute\n    top: 0\n    left: 0\n    width: 100%\n    height: 100%\n\n=hasPseudoElement($element)\n    &::#{$element}\n        content: ''\n        display: block\n\n=before\n    +hasPseudoElement(before)\n    &::before\n        +allSpace\n\n=after\n    +hasPseudoElement(after)\n    &::after\n        +allSpace\n\n=grid($size, $lineweight, $color)\n    position: absolute\n    background-image: linear-gradient($color $lineweight, transparent $lineweight, transparent 100% - $lineweight, $color 100% - $lineweight), linear-gradient(90deg, $color $lineweight, transparent $lineweight, transparent 100% - $lineweight, $color 100% - $lineweight)\n    background-size: $size $size\n\n=plane($width, $height, $color)\n    position: absolute\n    width: $width\n    height: $height\n    background: $color\n\n=border($size, $color)\n    border: $size solid $color\n    box-sizing: border-box\n\n=edge($depth, $color)\n    +before\n    &::before\n        border-radius: inherit\n        background: darken($color, 20%)\n        box-shadow: 0px 0px darken($color, 20%)\n        transform: translateZ(-$depth)\n\n=tile($width, $height, $depth, $color)\n    +plane($width, $height, $color)\n    +edge($depth, $color)\n\n=shadow($distance, $spacingX, $spacingY)\n    +after\n    &::after\n        border-radius: inherit\n        background: rgba(black, .2 / (1+$distance/10))\n        border-color: rgba(black, .2 / (1+$distance/10))\n        transform: translateX($distance*$spacingX) translateY($distance*$spacingY) translateZ(-$distance)\n        box-shadow: 0 0 $distance/10 rgba(black, .2)\n        filter: blur($distance/10)\n\n=cube($width, $height, $depth, $color)\n    position: absolute\n    width: $width\n    height: $height\n    transform-origin: center\n    > *\n        position: absolute\n        +border(1px, darken($color, 20%))\n        background: $color\n    > *:nth-child(3n+1)\n        width: $width\n        height: $height\n    > *:nth-child(3n+2)\n        width: $width\n        height: $depth\n    > *:nth-child(3n+3)\n        width: $height\n        height: $depth\n    > *:nth-child(1)\n        transform: translateZ($depth)\n    > *:nth-child(2)\n        transform: translateY($height - $depth/2) translateZ($depth/2) rotateX(-90deg)\n    > *:nth-child(3)\n        transform: translateX($width - $height/2) translateY($height/2 - $depth/2) translateZ($depth/2) rotateX(-90deg) rotateY(90deg)\n    > *:nth-child(4)\n        transform: initial\n    > *:nth-child(5)\n        transform: translateY(-$depth/2) translateZ($depth/2) rotateX(-90deg)\n    > *:nth-child(6)\n        transform: translateX(-$height/2) translateY($height/2 - $depth/2) translateZ($depth/2) rotateX(-90deg) rotateY(90deg)\n\n=keyframes($name, $attribute, $from, $to)\n    @keyframes #{$name}\n        from\n            #{$attribute}: $from\n        to\n            #{$attribute}: $to\n\n=animation($name, $attribute, $from, $to, $delay, $duration, $options)\n    +keyframes($name, $attribute, $from, $to)\n    #{$attribute}: $from\n    animation: $name $duration ease-in-out forwards $options\n    animation-delay: $delay\n\n=move($name, $from, $to, $delay, $duration, $options)\n    +animation($name, transform, $from, $to, $delay, $duration, $options)\n\n=moveShadow($name, $from, $to, $spacingX, $spacingY, $delay, $duration, $options)\n    +shadow($from, $spacingX, $spacingY)\n    &::after\n        animation: $name $duration ease-in-out forwards $options\n        animation-delay: $delay\n    @keyframes #{$name}\n        from\n            background: rgba(black, .2 / (1+$from/10))\n            border-color: rgba(black, .2 / (1+$from/10))\n            transform: translateX($from*$spacingX) translateY($from*$spacingY) translateZ(-$from)\n            box-shadow: 0 0 $from/10 rgba(black, .2)\n            filter: blur($from/10)\n        to\n            background: rgba(black, .2 / (1+$to/10))\n            border-color: rgba(black, .2 / (1+$to/10))\n            transform: translateX($to*$spacingX) translateY($to*$spacingY) translateZ(-$to)\n            box-shadow: 0 0 $to/10 rgba(black, .2)\n            filter: blur($to/10)\n\n=rotate($name, $from, $to, $delay, $duration)\n    transform-origin: center\n    +keyframes($name, transform, rotateZ($from), rotateZ($to))\n    transform: rotateZ($from)\n    animation: $name $duration linear forwards infinite\n    animation-delay: $delay\n"]}